- name: "docker TICK stack"
  hosts: localhost
  connection: local

  tasks:

# influx
  - name: "pull influx image"
    docker_image:
      name: influxdb:1.8
      source: pull

#  - name: check if influxdb volume exists
#    command: docker volume inspect influxdb
#    register: influxvolume_exists
#    failed_when: false

  - name: Create a volume
    docker_volume:
      name: influxdb
#    when: influxvolume_exists is failed


  - name: "run influx container"
    docker_container:
      name: influxdb1.8
      image: influxdb:1.8
      state: started
      env:
        INFLUXDB_DB: "influx"
        INFLUXDB_ADMIN_USER: "admin"
        INFLUXDB_ADMIN_PASSWORD: "123"
      ports:
        - "8086:8086"
      volumes:
        - influxdb_data:/var/lib/influxdb

# kapacitor
  - name: "pull kapacitor image"
    docker_image:
      name: kapacitor
      source: pull

  - name: "run kapacitor container"
    docker_container:
      name: kapacitor
      image: kapacitor
      state: started
      ports:
        - "9092:9092"

# chronograf
  - name: "pull chronograf image"
    docker_image:
      name: chronograf
      source: pull

  - name: "run chronograf container"
    docker_container:
      name: chronograf
      image: chronograf
      state: started
      ports:
        - "8888:8888"

# grafana
  - name: "pull grafana image"
    docker_image:
      name: grafana/grafana
      source: pull

  - name: "run grafana/grafana container"
    docker_container:
      name: grafana
      image: grafana/grafana
      state: started
      env:
        GF_SECURITY_ADMIN_USER: "admin"
        GF_SECURITY_ADMIN_PASSWORD: "123"
      ports:
        - "3000:3000"
      volumes:
        - influxdb_data:/var/lib/grafana

# telegraf
  - name: Telegraf repository key
    apt_key:
      url: https://repos.influxdata.com/influxdb.key
      keyring: /etc/apt/trusted.gpg.d/telegraf.gpg
      state: present

  - name: Telegraf repository
    apt_repository:
      repo: "deb https://repos.influxdata.com/ubuntu {{ ansible_distribution_release }} stable"
      state: present
      filename: telegraf
    register: repo_telegraf
    
  - name: Telegraf packages
    apt:
      name:
        - telegraf
      state: present
    register: install_telegraf

  - name: Copy config
    copy:
      src: ./telegraf.conf
      dest: /etc/telegraf/telegraf.conf
      owner: root
      group: root
      mode: 0644
      backup: yes
      force: no
    notify:
      - restart telegraf

  handlers:
  - name: restart telegraf
    service:
      name: "telegraf"
      state: restarted
      enabled: yes